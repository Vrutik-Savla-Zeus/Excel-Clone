Task 8
Coding guidelines
-----------------
1. Make sure you have comments over every function and every class variable you use
 
For example
class Person {
 
    /**
    * Intializes the Person object
    *@param {String} firstName FirstName of the person
    *@param {String} lastName Last Name of the person
    *@param {Number} age The age of the person
    **/
    constructor(firstName, lastName, age)
    {
         /**@type {String} Stores the firstName of the person*/
        this.firstName = firstName;
        /**@type {Number} Stores the age of the person*/
        this.age = age;
    }

}
 
 
1. Look at how excel grid works
Features to implement
---------------------
Use html canvas to great this excel grid.
 

FEATURES:
1. Support 1 lakh rows and 500 columns
2. Column resizing should be supported
3. Row resizing should be supported
4. Editing of a cell.
5. Load json data of the following format
    {
        id: 1,
        firstName : Raj,
        lastName : Solanki
        Age: 30
        Salary: 1000000
    }
 
    Generate 50000 records with different values and store them in the json.
    Load them in the excel sheet.
6. Support column selection
7. Support row selection
8. Support cell-range selection
9. Compute count, min, max, sum and average of selected cells if they have numbers.
10. Insert column & insert rows
11. select rows and columns through mouse and keyboard
 
Please make sure we create separate classes for 
1. grid
2. Try and create a separate class for each action that you perform.
    For eg: 
            Class for rows and columns
            Class for cells
            Class for selection
            Class for cell ranges           
            Optimize data storage.
3. The actions should be implemented in the form of command pattern. This will automatically support undo-redo.
 
Actions like typing, column resizing, row resizing should be a part of undo - redo.
 
Match the look and feel of the excel grid. Carefully look at the line thickness. 

FEATURES:
1. Excel grid (upto 1 lakh rows and 500 columns) (COMPLETED)
2. Column headers (COMPLETED)
3. Row indexes (COMPLETED)
4. Select all button (top left corner in excel) (COMPLETED) 
5. Single cell selection (COMPLETED)
6. Cell input and editing (COMPLETED)
10. Multi cell selection (COMPLETED)
11. All rows selection (COMPLETED)
12. All columns selection (COMPLETED)
16. Row resizing (COMPLETED) 
17. Column resizing (COMPLETED)
7. Data load from any json file (COMPLETED)

8. Data load from any csv file
9. Json to csv csv to json download

24. Excel header
22. Compute count, min, max, sum and average of selected cells if they have numbers.
19. Insert new row (+1 up and +1 down)
20. Insert new column (+1 left and +1 right)
23. Undo and Redo

13. Multiple cell selection (ctrl button)
14. Select rows through mouse and keyboard
15. Select columns through mouse and keyboard
18. Cell draging (replacing cells (drag and drop))
21. Bold and italic feature in cell input and cell editing


// Okay, so we will go step wise now. Now what I need is, each step will be of atleast two parts, part one, you will give me task to be implemented and I will try to implement it on my own. Then below that you will give me steps to implement it. If I faced any difficulty then I will refer those steps and below that you will give me logic as well. So my skills will get improved. Part 2 will be of cross checking, once my code implementation is done you will show your code and we will discuss optimal code implementation by comparing both. Note in part one you will strictly not give me a single line of code, I will try to implement everything on my own. Lets start with step 1 now, we willcomplement small small micro tasks in each step..

5 classes
each contain 4 func - hitTest pointer down , move , up
6th class- touch manager- contains event listeners, func register handlers, members-array of handlers and current handler= null
 
touch.registerhandler(new rowSelection()) x 4
 
onpointerdown
 
{
if(this.currentHandler!==null) 
{
this.currenthandler.onPOinterdown(e)
}
 
onpointermove(e, ()=>{
	if(this.currentHandler!==null) 
{
this.currenthandler.onPOintermove(e)
}
})
 
ISSUES:
2. On resizing row, when i resize 1st row then my header is resizing instead of 1st row.
3. on resizing row or column, my wrapper should also get increase so that I can scroll till last cells of bottom and right (currently not able to scroll till last cell when once column of row size gets altered).
4. Silimarly when cell gets shrinked that is when row or column resizes down then also wrapper should get decrease otherwise will create white space at extremes.
5. When resizing if I am at right edge og column then previous column should resizeand with row, if i am at top of cell then previous cell should resize (the above one).

We will fix these in promptwise, per issue one prompt...

